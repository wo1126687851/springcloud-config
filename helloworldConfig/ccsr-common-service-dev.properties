druid.master.Url = jdbc:mysql://124.239.10.21:3306/ccsr_common?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
druid.master.username =root
druid.master.password = zf123456
druid.master.maximum-pool-size = 10



druid.slave_1.Url = jdbc:mysql://124.239.10.21:3306/ccsr_common?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
druid.slave_1.username =root
druid.slave_1.password = zf123456
druid.slave_1.maximum-pool-size = 10

#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=124.239.10.39:9092,124.239.10.39:9093,124.239.10.39:9094

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-hello-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer



spring.cloud.bus.enabled=true
spring.cloud.bus.trace.enabled=true
management.endpoints.web.exposure.include=bus-refresh




# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
#spring.redis.host=127.0.0.1
# Redis服务器连接端口
#spring.redis.port=6379

#集群配置
spring.redis.cluster.nodes=172.16.50.20:7001,172.16.50.20:7002,172.16.50.21:7003,\
  172.16.50.21:7004,172.16.50.22:7005,172.16.50.22:7006

spring.redis.cluster.max-redirects=3

#spring.redis.password=

# Redis服务器连接密码（默认为空）
#spring.redis.password=f93d7i3j
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=600
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=1000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0

hello = hello1234567891011
